模型简介

wanx2.1-t2v-turbo

生成速度更快，表现均衡。

wanx2.1-t2v-plus

生成细节更丰富，画面更具质感。

HTTP调用
文生视频模型处理时间较长，为了避免请求超时，HTTP调用仅支持异步获取模型结果。您需要发起两个请求：

创建任务：首先发送一个请求创建任务，该请求会返回任务ID。

根据任务ID查询结果：使用上一步获得的任务ID，查询模型生成的结果。

文生视频耗时较长（约5-10分钟），具体耗时受限于排队任务数量和服务执行情况，请您在获取结果时耐心等待。
创建任务
POST https://dashscope.aliyuncs.com/api/v1/services/aigc/video-generation/video-synthesis

请求参数

文生视频
 
curl --location 'https://dashscope.aliyuncs.com/api/v1/services/aigc/video-generation/video-synthesis' \
    -H 'X-DashScope-Async: enable' \
    -H "Authorization: Bearer $DASHSCOPE_API_KEY" \
    -H 'Content-Type: application/json' \
    -d '{
    "model": "wanx2.1-t2v-turbo",
    "input": {
        "prompt": "一只小猫在月光下奔跑"
    },
    "parameters": {
        "size": "1280*720"
    }
}'
请求头（Headers）
Content-Type string （必选）

请求内容类型。此参数必须设置为application/json。

Authorization string（必选）

请求身份认证。接口使用百炼API-Key进行身份认证。示例值：Bearer d1xxx2a。

X-DashScope-Async string （必选）

异步处理配置参数。HTTP请求只支持异步，必须设置为enable。

请求体（Request Body）
model string （必选）

模型名称。示例值：wanx2.1-t2v-turbo。

input object （必选）

输入的基本信息，如提示词等。

属性

prompt string （必选）

文本提示词。支持中英文，长度不超过800个字符，每个汉字/字母占一个字符，超过部分会自动截断。

示例值：一只小猫在月光下奔跑。

提示词的使用技巧请参见文生视频/图生视频Prompt指南。

parameters object （可选）

图像处理参数。

属性

size string （可选）

生成视频的分辨率。默认值1280*720。其中，1280代表宽度，720代表高度。

目前支持设置480P和720P两个档位的视频分辨率。模型支持的视频分辨率如下：

wanx2.1-t2v-turbo： 支持 480P 和 720P 对应的所有分辨率。

wanx2.1-t2v-plus： 仅支持 720P 对应的所有分辨率。

480P档位：不同视频宽高比对应的分辨率如下：

16:9：832*480

9:16：480*832

1:1：624*624

720P档位：不同视频宽高比对应的分辨率如下：

16:9：1280*720，默认值。

9:16：720*1280

1:1：960*960

3:4：832*1088

4:3：1088*832

size 参数常见误区：size 参数应直接设置为目标分辨率的具体数值（如 1280*720），而不是宽高比（如 1:1）或分辨率档位名称（如 480P 或 720P）。
duration integer （可选）

生成视频的时长，默认为5，单位为秒。目前仅支持5秒固定时长生成。

prompt_extend bool （可选）

是否开启prompt智能改写。开启后使用大模型对输入prompt进行智能改写。对于较短的prompt生成效果提升明显，但会增加耗时。

true：默认值，开启智能改写。

false：不开启智能改写。

seed integer （可选）

随机数种子，用于控制模型生成内容的随机性。取值范围为[0, 2147483647]。

如果不提供，则算法自动生成一个随机数作为种子。如果希望生成内容保持相对稳定，可以使用相同的seed参数值。

响应参数
成功响应
 
{
    "output": {
        "task_status": "PENDING",
        "task_id": "0385dc79-5ff8-4d82-bcb6-xxxxxx"
    },
    "request_id": "4909100c-7b5a-9f92-bfe5-xxxxxx"
}
output object

任务输出信息。

属性

task_id string

任务ID。

task_status string

任务状态。

枚举值

PENDING：任务排队中

RUNNING：任务处理中

SUSPENDED：任务挂起

SUCCEEDED：任务执行成功

FAILED：任务执行失败

UNKNOWN：任务不存在或状态未知

request_id string

请求唯一标识。可用于请求明细溯源和问题排查。

code string

请求失败的错误码。请求成功时不会返回此参数，详情请参见错误信息。

message string

请求失败的详细信息。请求成功时不会返回此参数，详情请参见错误信息。

根据任务ID查询结果
GET https://dashscope.aliyuncs.com/api/v1/tasks/{task_id}

请求参数
查询任务结果
您需要将86ecf553-d340-4e21-xxxxxxxxx替换为真实的task_id。

 
curl -X GET \
--header "Authorization: Bearer $DASHSCOPE_API_KEY" \
https://dashscope.aliyuncs.com/api/v1/tasks/86ecf553-d340-4e21-xxxxxxxxx
请求头（Headers）
Authorization string（必选）

请求身份认证。接口使用百炼API-Key进行身份认证。示例值：Bearer d1xxx2a。

URL路径参数（Path parameters）
task_id string（必选）

任务ID。

响应参数
任务执行成功
任务数据（如任务状态、视频URL等）仅保留24小时，超时后会被自动清除。请您务必及时保存生成的视频。

 
{
    "request_id": "851985d0-fbba-9d8d-a17a-xxxxxx",
    "output": {
        "task_id": "208e2fd1-fcb4-4adf-9fcc-xxxxxx",
        "task_status": "SUCCEEDED",
        "submit_time": "2025-01-08 16:43:27.877",
        "scheduled_time": "2025-01-08 16:43:27.908",
        "end_time": "2025-01-08 16:46:35.304",
        "video_url": "https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.comc/aa.mp4"
    },
    "usage": {
        "video_count": 1
    }
}
output object

任务输出信息。

属性

task_id string

任务ID。

task_status string

任务状态。

枚举值

PENDING：任务排队中

RUNNING：任务处理中

SUSPENDED：任务挂起

SUCCEEDED：任务执行成功

FAILED：任务执行失败

UNKNOWN：任务不存在或状态未知

submit_time string

任务提交时间。

scheduled_time string

任务执行时间。

end_time string

任务完成时间。

video_url string

视频URL。可通过此URL下载视频。

code string

请求失败的错误码。请求成功时不会返回此参数，详情请参见错误信息。

message string

请求失败的详细信息。请求成功时不会返回此参数，详情请参见错误信息。

usage object

输出信息统计。只对成功的结果计数。

属性

video_count integer

生成视频的数量。

request_id string

请求唯一标识。可用于请求明细溯源和问题排查。




DashScope SDK调用
请先确认已安装最新版DashScope SDK，否则可能运行报错：安装SDK。

DashScope SDK目前已支持Python和Java。

SDK与HTTP接口的参数名基本一致，参数结构根据不同语言的SDK封装而定。参数说明可参考HTTP调用。

由于视频模型处理时间较长，底层服务采用异步方式提供。SDK在上层进行了封装，支持同步、异步两种调用方式。

文生视频耗时较长（约5-10分钟），具体耗时受限于排队任务数和服务执行情况，请您在获取结果时耐心等待。
Python SDK调用
同步调用异步调用
请求示例
 
from http import HTTPStatus
# dashscope sdk >= 1.22.1
from dashscope import VideoSynthesis

def sample_sync_call_t2v():
    # call sync api, will return the result
    print('please wait...')
    rsp = VideoSynthesis.call(model='wanx2.1-t2v-turbo',
                              prompt='一只小猫在月光下奔跑',
                              size='1280*720')
    print(rsp)
    if rsp.status_code == HTTPStatus.OK:
        print(rsp.output.video_url)
    else:
        print('Failed, status_code: %s, code: %s, message: %s' %
              (rsp.status_code, rsp.code, rsp.message))


if __name__ == '__main__':
    sample_sync_call_t2v()
响应示例
video_url 有效期24小时，请及时下载视频。
 
{
	"status_code": 200,
	"request_id": "a250655b-c899-9384-b12e-xxxxxx",
	"code": null,
	"message": "",
	"output": {
		"task_id": "04d3cdfb-8405-4e6b-bb03-xxxxxx",
		"task_status": "SUCCEEDED",
		"video_url": "https://dashscope-result-sh.oss-cn-shanghai.aliyuncs.com/aaa.mp4",
		"submit_time": "2025-02-12 11:27:12.975",
		"scheduled_time": "2025-02-12 11:29:39.988",
		"end_time": "2025-02-12 11:35:35.801"
	},
	"usage": {
		"video_count": 1,
		"video_duration": 5,
		"video_ratio": "1280*720"
	}
}